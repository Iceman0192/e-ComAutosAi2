// Permission Constants - Unified system for consistent access control
export const PERMISSIONS = {
  // Basic Tier
  CACHED_SALES_HISTORY: 'CACHED_SALES_HISTORY',
  BASIC_ACTIVE_LOTS: 'BASIC_ACTIVE_LOTS', 
  BASIC_SEARCH: 'BASIC_SEARCH',
  
  // Gold Tier
  FRESH_SALES_HISTORY: 'FRESH_SALES_HISTORY',
  SIMILAR_VEHICLES: 'SIMILAR_VEHICLES',
  IMPORT_CALCULATOR: 'IMPORT_CALCULATOR',
  ADVANCED_FILTERS: 'ADVANCED_FILTERS',
  
  // Platinum Tier
  ADVANCED_ANALYTICS: 'ADVANCED_ANALYTICS',
  AI_ANALYSIS: 'AI_ANALYSIS',
  AUCTION_MIND: 'AUCTION_MIND',
  BULK_EXPORT: 'BULK_EXPORT',
  PRIORITY_SUPPORT: 'PRIORITY_SUPPORT',
  
  // Enterprise Tier
  TEAM_MANAGEMENT: 'TEAM_MANAGEMENT',
  WHITE_LABEL: 'WHITE_LABEL',
  API_ACCESS: 'API_ACCESS',
  CUSTOM_REPORTS: 'CUSTOM_REPORTS',
  DEDICATED_SUPPORT: 'DEDICATED_SUPPORT',
  
  // Admin Only
  ADMIN_PANEL: 'ADMIN_PANEL',
  USER_MANAGEMENT: 'USER_MANAGEMENT',
  SYSTEM_MONITORING: 'SYSTEM_MONITORING',
  GOD_LEVEL_ACCESS: 'GOD_LEVEL_ACCESS'
} as const;

export type Permission = typeof PERMISSIONS[keyof typeof PERMISSIONS];

// Normalize permission names for backward compatibility
export function normalizePermission(permission: string): Permission {
  // Handle legacy permission names
  const normalized = permission.toUpperCase().replace(/[-\s]/g, '_');
  
  // Map legacy names to current permissions
  const legacyMappings: Record<string, Permission> = {
    'AI_ANALYSIS': PERMISSIONS.AI_ANALYSIS,
    'ADVANCED_ANALYTICS': PERMISSIONS.ADVANCED_ANALYTICS,
    'TEAM_MANAGEMENT': PERMISSIONS.TEAM_MANAGEMENT
  };
  
  return legacyMappings[normalized] || (normalized as Permission);
}

// Role-based permission mapping
export const ROLE_PERMISSIONS: Record<string, Permission[]> = {
  freemium: [
    PERMISSIONS.BASIC_SEARCH,
    PERMISSIONS.CACHED_SALES_HISTORY
  ],
  basic: [
    PERMISSIONS.BASIC_SEARCH,
    PERMISSIONS.CACHED_SALES_HISTORY,
    PERMISSIONS.BASIC_ACTIVE_LOTS,
    PERMISSIONS.FRESH_SALES_HISTORY
  ],
  gold: [
    PERMISSIONS.BASIC_SEARCH,
    PERMISSIONS.CACHED_SALES_HISTORY,
    PERMISSIONS.BASIC_ACTIVE_LOTS,
    PERMISSIONS.FRESH_SALES_HISTORY,
    PERMISSIONS.SIMILAR_VEHICLES,
    PERMISSIONS.IMPORT_CALCULATOR,
    PERMISSIONS.ADVANCED_FILTERS
  ],
  platinum: [
    PERMISSIONS.BASIC_SEARCH,
    PERMISSIONS.CACHED_SALES_HISTORY,
    PERMISSIONS.BASIC_ACTIVE_LOTS,
    PERMISSIONS.FRESH_SALES_HISTORY,
    PERMISSIONS.SIMILAR_VEHICLES,
    PERMISSIONS.IMPORT_CALCULATOR,
    PERMISSIONS.ADVANCED_FILTERS,
    PERMISSIONS.ADVANCED_ANALYTICS,
    PERMISSIONS.AI_ANALYSIS,
    PERMISSIONS.AUCTION_MIND,
    PERMISSIONS.BULK_EXPORT,
    PERMISSIONS.PRIORITY_SUPPORT
  ],
  enterprise: [
    PERMISSIONS.BASIC_SEARCH,
    PERMISSIONS.CACHED_SALES_HISTORY,
    PERMISSIONS.BASIC_ACTIVE_LOTS,
    PERMISSIONS.FRESH_SALES_HISTORY,
    PERMISSIONS.SIMILAR_VEHICLES,
    PERMISSIONS.IMPORT_CALCULATOR,
    PERMISSIONS.ADVANCED_FILTERS,
    PERMISSIONS.ADVANCED_ANALYTICS,
    PERMISSIONS.AI_ANALYSIS,
    PERMISSIONS.AUCTION_MIND,
    PERMISSIONS.BULK_EXPORT,
    PERMISSIONS.PRIORITY_SUPPORT,
    PERMISSIONS.TEAM_MANAGEMENT,
    PERMISSIONS.WHITE_LABEL,
    PERMISSIONS.API_ACCESS,
    PERMISSIONS.CUSTOM_REPORTS,
    PERMISSIONS.DEDICATED_SUPPORT
  ],
  admin: [
    // Admin has all permissions
    ...Object.values(PERMISSIONS)
  ]
};

export function hasPermission(userRole: string, permission: Permission): boolean {
  const rolePermissions = ROLE_PERMISSIONS[userRole] || [];
  return rolePermissions.includes(permission);
}